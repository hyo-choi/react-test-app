{"version":3,"sources":["hooks/useContext.tsx","component/Bar.tsx","component/Page.tsx","App.tsx","index.tsx"],"names":["initialInfo","name","img","isOnline","userContext","createContext","undefined","dispatchContext","reducer","state","action","type","info","ContextProvider","children","useReducer","dispatch","Provider","value","useUserContext","useContext","Error","useDispatchContext","Bar","history","useHistory","to","onClick","push","Page","alt","src","App","content","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"+KAUMA,EAA4B,CAChCC,KAAM,GACNC,IAAK,GACLC,UAAU,GAGNC,EAAcC,6BAAwCC,GACtDC,EAAkBF,6BAAgDC,GAExE,SAASE,EAAQC,EAAqBC,GACpC,OAAQA,EAAOC,MACb,IAAK,QACH,OAAO,2BAAKD,EAAOE,MAAnB,IAAyBT,UAAU,IACrC,IAAK,SACL,QACE,OAAO,eAAKH,IAIX,SAASa,EAAT,GAAuE,IAA5CC,EAA2C,EAA3CA,SAA2C,EACjDC,qBAAWP,EAASR,GAD6B,mBACpES,EADoE,KAC7DO,EAD6D,KAE3E,OACE,cAACZ,EAAYa,SAAb,CAAsBC,MAAOT,EAA7B,SACE,cAACF,EAAgBU,SAAjB,CAA0BC,MAAOF,EAAjC,SACGF,MAMF,SAASK,IACd,IAAMV,EAAQW,qBAAWhB,GACzB,IAAKK,EACH,MAAM,IAAIY,MAAM,sBAElB,OAAQZ,EAGH,SAASa,IACd,IAAMN,EAAWI,qBAAWb,GAC5B,IAAKS,EACH,MAAM,IAAIK,MAAM,sBAElB,OAAQL,E,WCjDK,SAASO,IACtB,IAAMC,EAAUC,cACVT,EAAWM,IAOjB,OACE,+BACE,6BAAI,cAAC,IAAD,CAAMI,GAAG,IAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,QAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,WAAT,uBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,aAAT,yBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,WAAT,uBACJ,6BAAI,wBAAQC,QAZK,WACnBX,EAAS,CAAEL,KAAM,WACjBa,EAAQI,KAAK,MAUP,8BCjBK,SAASC,EAAT,GAA4D,IAA5Cf,EAA2C,EAA3CA,SACvBL,EAAQU,IACd,OACA,gCACGL,EACCL,EAAMN,UACN,qCACE,sCAASM,EAAMR,QACf,qBAAK6B,IAAKrB,EAAMR,KAAM8B,IAAKtB,EAAMP,YCL1B,SAAS8B,IACtB,IAAMR,EAAUC,cACVT,EAAWM,IAWXW,EAVed,IAAbhB,SAWN,qCACE,cAACoB,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOW,KAAK,QAAQC,OAAQ,kBAAM,cAACN,EAAD,sBAClC,cAAC,IAAD,CAAOK,KAAK,WAAWC,OAAQ,kBAAM,cAACN,EAAD,yBACrC,cAAC,IAAD,CAAOK,KAAK,aAAaC,OAAQ,kBAAM,cAACN,EAAD,2BACvC,cAAC,IAAD,CAAOK,KAAK,WAAWC,OAAQ,kBAAM,cAACN,EAAD,yBACrC,cAAC,IAAD,CAAOK,KAAK,IAAIC,OAAQ,kBAAM,cAACN,EAAD,4BAIlC,qCACE,cAAC,IAAD,CAAOK,KAAK,IAAIC,OAAQ,kBAAM,cAACN,EAAD,8BAC9B,wBAAQF,QAtBQ,WAIlBX,EAAS,CAAEL,KAAM,QAASC,KAAM,CAAEX,KAAM,QAASC,IAAK,0DACtDsB,EAAQI,KAAK,MAiBX,2BAIJ,OAAQ,mCACLK,IChCLG,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,IAAD,UACE,cAACxB,EAAD,UACE,cAACmB,EAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.9a4ab369.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext, Dispatch } from 'react';\n\ntype userInfoType = {\n  name: string,\n  img: string,\n  isOnline?: boolean,\n}\n\ntype actionType = { type: 'login', info: userInfoType } | { type: 'logout' };\n\nconst initialInfo: userInfoType = {\n  name: '',\n  img: '',\n  isOnline: false,\n};\n\nconst userContext = createContext<userInfoType | undefined>(undefined);\nconst dispatchContext = createContext<Dispatch<actionType> | undefined>(undefined);\n\nfunction reducer(state: userInfoType, action: actionType): userInfoType {\n  switch (action.type) {\n    case 'login':\n      return { ...action.info, isOnline: true };\n    case 'logout':\n    default:\n      return { ...initialInfo };\n  }\n}\n\nexport function ContextProvider({ children }: { children: React.ReactNode }) {\n  const [state, dispatch] = useReducer(reducer, initialInfo);\n  return (\n    <userContext.Provider value={state}>\n      <dispatchContext.Provider value={dispatch}>\n        {children}\n      </dispatchContext.Provider>\n    </userContext.Provider>\n  );\n}\n\nexport function useUserContext() {\n  const state = useContext(userContext);\n  if (!state) {\n    throw new Error('Provider not found');\n  }\n  return (state);\n}\n\nexport function useDispatchContext() {\n  const dispatch = useContext(dispatchContext);\n  if (!dispatch) {\n    throw new Error('Provider not found');\n  }\n  return (dispatch);\n}\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatchContext } from '../hooks/useContext';\n\nexport default function Bar() {\n  const history = useHistory();\n  const dispatch = useDispatchContext();\n\n  const handleLogout = () => {\n    dispatch({ type: 'logout' });\n    history.push('/');\n  }\n\n  return (\n    <ol>\n      <ul><Link to=\"/\">main</Link></ul>\n      <ul><Link to=\"/game\">game</Link></ul>\n      <ul><Link to=\"/profile\">profile</Link></ul>\n      <ul><Link to=\"/community\">community</Link></ul>\n      <ul><Link to=\"/channel\">channel</Link></ul>\n      <ul><button onClick={handleLogout}>fake logout</button></ul>\n    </ol>\n  );\n}\n","import React from 'react';\nimport { useUserContext } from '../hooks/useContext';\n\nexport default function Page({ children }: { children: React.ReactNode }) {\n  const state = useUserContext();\n  return (\n  <div>\n    {children}\n    { state.isOnline && (\n      <>\n        <h3>Hi, {state.name}</h3>\n        <img alt={state.name} src={state.img} />\n      </>)}\n  </div>);\n}\n","import React from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Bar from './component/Bar';\nimport Page from './component/Page';\nimport { useDispatchContext, useUserContext } from './hooks/useContext';\n\nexport default function App() {\n  const history = useHistory();\n  const dispatch = useDispatchContext();\n  const { isOnline } = useUserContext();\n\n  const handleLogin = () => {\n    // 실제 구현에서는 백엔드 서버와 통신하여 async로 login 절차 진행\n    // 회원 정보 있으면 로그인 -> 세션 유지되는 동안은 접속시 자동 로그인\n    // 회원 정보 없으면 회원가입\n    dispatch({ type: 'login', info: { name: 'user1', img: 'https://avatars.githubusercontent.com/u/57004991?v=4' } });\n    history.push('/');\n  }\n\n  const content = isOnline ? (\n    <>\n      <Bar />\n      <Switch>\n        <Route path=\"/game\" render={() => <Page>game</Page>} />\n        <Route path=\"/profile\" render={() => <Page>profile</Page>} />\n        <Route path=\"/community\" render={() => <Page>community</Page>} />\n        <Route path=\"/channel\" render={() => <Page>channel</Page>} />\n        <Route path=\"/\" render={() => <Page>main</Page>} />\n      </Switch>\n    </>\n  ) : (\n    <>\n      <Route path=\"/\" render={() => <Page>please login</Page>} />\n      <button onClick={handleLogin}>fake login</button>\n    </>\n  );\n\n  return (<>\n    {content}\n  </>);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ContextProvider } from './hooks/useContext';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ContextProvider>\n        <App />\n      </ContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}