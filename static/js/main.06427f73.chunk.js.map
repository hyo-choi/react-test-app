{"version":3,"sources":["hooks/useContext.tsx","component/Bar.tsx","hooks/useAppState.tsx","component/CommunityPage.jsx","component/LoginPage.tsx","component/Page.tsx","component/ProfilePage.tsx","App.tsx","index.tsx"],"names":["initialInfo","name","img","isOnline","userContext","createContext","undefined","dispatchContext","reducer","state","action","type","info","ContextProvider","children","useReducer","dispatch","Provider","value","useUserContext","useContext","Error","useDispatchContext","Bar","history","useHistory","to","onClick","push","React","memo","initialState","isError","isLoading","appStateContext","appDispatchContext","AppStateProvider","useAppContext","useAppDispatchContext","Posts","posts","map","post","id","title","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","number","CommunityPage","useState","setPosts","currentPage","setCurrentPage","appStateDispatcher","useEffect","axios","get","finally","then","response","data","catch","error","message","indexOfLast","indexOfFirst","slice","currentPosts","length","LoginPage","Page","ProfilePage","alt","src","App","content","path","render","component","color","height","width","timeout","ReactDOM","StrictMode","basename","process","REACT_APP_PATH","document","getElementById"],"mappings":"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","file":"static/js/main.06427f73.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext, Dispatch } from 'react';\n\ntype userInfoType = {\n  name: string,\n  img: string,\n  isOnline?: boolean,\n}\n\ntype actionType = { type: 'login', info: userInfoType } | { type: 'logout' };\n\nconst initialInfo: userInfoType = {\n  name: '',\n  img: '',\n  isOnline: false,\n};\n\nconst userContext = createContext<userInfoType | undefined>(undefined);\nconst dispatchContext = createContext<Dispatch<actionType> | undefined>(undefined);\n\nfunction reducer(state: userInfoType, action: actionType): userInfoType {\n  switch (action.type) {\n    case 'login':\n      return { ...action.info, isOnline: true };\n    case 'logout':\n    default:\n      return { ...initialInfo };\n  }\n}\n\nexport function ContextProvider({ children }: { children: React.ReactNode }) {\n  const [state, dispatch] = useReducer(reducer, initialInfo);\n  return (\n    <userContext.Provider value={state}>\n      <dispatchContext.Provider value={dispatch}>\n        {children}\n      </dispatchContext.Provider>\n    </userContext.Provider>\n  );\n}\n\nexport function useUserContext() {\n  const state = useContext(userContext);\n  if (!state) {\n    throw new Error('Provider not found');\n  }\n  return (state);\n}\n\nexport function useDispatchContext() {\n  const dispatch = useContext(dispatchContext);\n  if (!dispatch) {\n    throw new Error('Provider not found');\n  }\n  return (dispatch);\n}\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatchContext, useUserContext } from '../hooks/useContext';\n\nfunction Bar() {\n  const history = useHistory();\n  const dispatch = useDispatchContext();\n  const { name } = useUserContext();\n\n  const handleLogout = () => {\n    dispatch({ type: 'logout' });\n    history.push('/');\n  }\n\n  return (\n    <nav>\n      <ol>\n        <ul><Link to=\"/\">main</Link></ul>\n        <ul><Link to=\"/game\">game</Link></ul>\n        <ul><Link to=\"/profile\">profile</Link></ul>\n        <ul><Link to=\"/community\">community</Link></ul>\n        <ul><Link to=\"/channel\">channel</Link></ul>\n        <ul>Logged in: {name}</ul>\n        <ul><button onClick={handleLogout}>fake logout</button></ul>\n      </ol>\n    </nav>\n  );\n}\n\nexport default React.memo(Bar);\n","import React, { createContext, Dispatch, useContext, useReducer } from 'react';\n\ntype appStateType = {\n  isError: boolean,\n  isLoading: boolean,\n};\n\ntype stateActionType = { type: 'error', message: string } | { type: 'loading' } | { type: 'init' };\n\nconst initialState: appStateType = {\n  isError: false,\n  isLoading: false,\n};\n\nconst appStateContext = createContext<appStateType | undefined>(undefined);\nconst appDispatchContext = createContext<Dispatch<stateActionType> | undefined>(undefined);\n\nfunction reducer(state: appStateType, action: stateActionType): appStateType {\n  switch (action.type) {\n    case 'error':\n      return { isError: true, isLoading: false };\n    case 'loading':\n      return { isError: false, isLoading: true };\n    default:\n      return { ...initialState };\n  }\n};\n\nexport function AppStateProvider({ children }: { children: React.ReactNode}) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <appStateContext.Provider value={state}>\n      <appDispatchContext.Provider value={dispatch}>\n        {children}\n      </appDispatchContext.Provider>\n    </appStateContext.Provider>\n  );\n};\n\nexport function useAppContext() {\n  const state = useContext(appStateContext);\n  if (!state) {\n    throw new Error('Provider not found');\n  }\n  return (state);\n}\n\nexport function useAppDispatchContext() {\n  const dispatch = useContext(appDispatchContext);\n  if (!dispatch) {\n    throw new Error('Provider not found');\n  }\n  return (dispatch);\n}\n\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useAppContext, useAppDispatchContext } from '../hooks/useAppState';\n\nfunction Posts({ posts }) {\n  return (\n    <ul>\n      { posts.map(post => (\n        <li key={post.id}>\n          {`${post.id}, ${post.title}`}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction Pagination({ postsPerPage, totalPosts, paginate }) {const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <div>\n      <nav>\n        <ul>\n          {pageNumbers.map(number => (\n            <li key={number}>\n              <span onClick={() => paginate(number)}>\n                {number}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default function CommunityPage() {\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const appStateDispatcher = useAppDispatchContext();\n  const { isLoading } = useAppContext();\n  const postsPerPage = 10;\n\n  useEffect(() => {\n    appStateDispatcher({ type: 'loading' });\n\n    axios.get('https://jsonplaceholder.typicode.com/posts')\n      .finally(() => {\n        appStateDispatcher({ type: 'init' });\n      })\n      .then((response) => {\n        setPosts(response.data);\n        setCurrentPage(1);\n      })\n      .catch((error) => { appStateDispatcher({\n        type: 'error',\n        message: error.message,\n      })})\n    return;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const indexOfLast = currentPage * postsPerPage;\n  const indexOfFirst = indexOfLast - postsPerPage;\n  function currentPosts(posts) {\n    return posts.slice(indexOfFirst, indexOfLast);\n  }\n\n  return (\n    <div>\n      <h3>Community</h3>\n      { !isLoading &&\n        <>\n          <Posts posts={currentPosts(posts)} />\n          <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={setCurrentPage} />\n        </>}\n    </div>\n  );\n}\n","import axios from 'axios';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAppDispatchContext } from '../hooks/useAppState';\nimport { useDispatchContext } from '../hooks/useContext';\n\nexport default function LoginPage() {\n  const history = useHistory();\n  const dispatch = useDispatchContext();\n  const appStateDispatcher = useAppDispatchContext();\n\n  const handleLogin = () => {\n    appStateDispatcher({ type: 'loading' });\n    // 실제 구현에서는 백엔드 서버와 통신하여 async로 login 절차 진행\n    // 회원 정보 있으면 로그인 -> 세션 유지되는 동안은 접속시 자동 로그인\n    // 회원 정보 없으면 회원가입\n    axios.get('https://jsonplaceholder.typicode.com/users/1')\n      .finally(() => {\n        appStateDispatcher({ type: 'init' });\n      })\n      .then((response) => {\n        dispatch({\n          type: 'login',\n          info: { \n            name: response.data.name,\n            img: 'https://avatars.githubusercontent.com/u/57004991?v=4',\n          }\n        });\n        history.push('/');\n      })\n      .catch((error) => { appStateDispatcher({\n        type: 'error',\n        message: error.message,\n      }) });\n  }\n  return (\n  \t<div>\n      <h3>Please Login</h3>\n      <button onClick={handleLogin}>fake login</button>\n  \t</div>\n  );\n}\n\n","import React from 'react';\n\nexport default function Page({ children }: { children: React.ReactNode }) {\n  return (\n    <div>\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useUserContext } from '../hooks/useContext';\n\nexport default function ProfilePage() {\n  const {name, img} = useUserContext();\n  return (\n    <div>\n\t\t  <h3>Hi, {name}</h3>\n      <img alt={name} src={img} />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport { Route, Switch } from 'react-router-dom';\nimport Bar from './component/Bar';\nimport CommunityPage from './component/CommunityPage';\nimport LoginPage from './component/LoginPage';\nimport Page from './component/Page';\nimport ProfilePage from './component/ProfilePage';\nimport { useAppContext } from './hooks/useAppState';\nimport { useUserContext } from './hooks/useContext';\n\nexport default function App() {\n  const { isOnline } = useUserContext();\n  const { isError, isLoading } = useAppContext();\n\n  const content = isOnline ? (\n    <>\n      <Bar />\n      <Switch>\n        <Route path=\"/game\" render={() => <Page>game</Page>} />\n        <Route path=\"/profile\" component={ProfilePage} />\n        <Route path=\"/community\" component={CommunityPage} />\n        <Route path=\"/channel\" render={() => <Page>channel</Page>} />\n        <Route path=\"/\" render={() => <Page>main</Page>} />\n      </Switch>\n    </>\n  ) : (\n    <Route path=\"/\" component={LoginPage} />\n  );\n\n  return (\n  <>\n    {isLoading && <Loader\n      // Loader는 Material UI progress bar로 대체할 수 있을 듯\n      // 그리고 전체 UI에 통일해서 적용하기보다는 각각에 적용하고 일부는 스켈레톤 UI 쓰는 게 좋을 듯\n      type=\"Oval\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />}\n    {isError ? <div>Error! Please refresh</div> : content}\n  </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ContextProvider } from './hooks/useContext';\nimport App from './App';\nimport { AppStateProvider } from './hooks/useAppState';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.REACT_APP_PATH}>\n      <ContextProvider>\n        <AppStateProvider>\n          <App />\n        </AppStateProvider>\n      </ContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}